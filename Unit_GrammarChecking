unit GrammarChecking;

{$mode ObjFPC}{$H+}

interface

uses
    Classes, SysUtils, GrammarLibrary;

function CheckGrammarMistakes(const S: TStringArray): integer;

implementation

function CheckGrammarMistakes(const S: TStringArray): integer;
var
   i: integer;
   GCount : integer;
   GLib: GML;
   St: string;

begin
     GLib := GML.Create;
     GCount := 0;
     writeln('Are you writing the follow text types?');
     writeln('Story/News Report/Biographies/Witness statement') ;
     writeln('Y/N :');
     readln(St);
     if (St = 'N') or (St = 'n') or (St = 'No') or (St = 'no') or (St = 'NO') then
        for i := 0 to Length(S) - 1 do
        begin
             if GLib.SrchPRV(S[i]) then
                if not( (S[i-1] = 'I') or (S[i-1] = 'They') )then
                   GCount := GCount + 1
                else if GLib.SrchPRSV(S[i]) then
                        if not( (S[i-1] = 'He') or (S[i-1] = 'She') or (S[i-1] = 'It')) then
                           GCount := GCount + 1;
        end
     else if (St = 'Y') or (St = 'y') or (St = 'Yes') or (St = 'yes') or (St = 'YES') then
             for i := 0 to Length(S) - 1 do
             begin
                  if GLib.SrchPAV(S[i]) then
                     if not(S[i-1] = 'They') then
                        GCount := GCount + 1;
             end;
     Result := GCount;
end;

end.
                              
